#Test file to verify my batch compute workflow

import pandas as pd
import time
from absl import app
from absl import flags

from open_spiel.python.algorithms import exploitability
from open_spiel.python.algorithms import cfr
import pyspiel

FLAGS = flags.FLAGS

flags.DEFINE_integer("iterations", 100, "Number of iterations")
flags.DEFINE_string("game", "leduc_poker", "Name of the game")
flags.DEFINE_integer("players", 2, "Number of players")
flags.DEFINE_integer("print_freq", 1, "How often to print the exploitability")

header = ['Iteration', 'Execution Time', 'Exploitability']#, 'Average Payoff', 'Value compared to uniform']
cfr_data = []
efr_data = []

def main(_):
  game = pyspiel.load_game(FLAGS.game, {"players": FLAGS.players})
  cfr_solver = cfr.CFRPlusSolver(game)
  
  for i in range(FLAGS.iterations):
    cfr_iteration_data = [i]

    CFR_t = time.process_time()
    cfr_solver.evaluate_and_update_policy()
    CFR_t = time.process_time() - CFR_t

    cfr_iteration_data.append(CFR_t)
    if i % FLAGS.print_freq == 0:

      cconv = exploitability.exploitability(game, cfr_solver.average_policy())
      print("CFR Iteration {} exploitability {}".format(i, cconv))
      cfr_iteration_data.append(cconv)
    cfr_data.append(cfr_iteration_data)

CFR_data = pd.DataFrame(cfr_data, columns=header)

CFR_data.to_csv('EFR_inital_action.csv', index=False)



if __name__ == "__main__":
  app.run(main)