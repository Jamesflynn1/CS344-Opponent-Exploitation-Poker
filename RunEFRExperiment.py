# Copyright 2019 DeepMind Technologies Limited
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

"""Example use of the CFR algorithm on Kuhn Poker."""
import pandas as pd
import time

from open_spiel.python.algorithms import EFR
from open_spiel.python.algorithms import exploitability
from open_spiel.python.algorithms import cfr
from Opponents.Uniform import Uniform_Opponent
import pyspiel

FL_game = 'leduc_poker'
FL_iterations = 100
FL_players = 2
FL_print_freq = 1
FL_Opponent = Uniform

header = ['Iteration', 'Execution Time', 'Exploitability']#, 'Average Payoff', 'Value compared to uniform']
cfr_data = []
efr_data = []

def main():
  game = pyspiel.load_game(FL_game, {"players": FL_players})
  print("debujg")
  efr_solver = EFR.EFRSolver(game)
  cfr_solver = cfr.CFRPlusSolver(game)
  opponent = FL_Opponent(game)

  for i in range(FL_iterations):
    print("debug")
    cfr_iteration_data = [i]
    EFR_iteration_data = [i]

    EFR_t = time.process_time()
    efr_solver.evaluate_and_update_policy()
    EFR_t = time.process_time() - EFR_t

    CFR_t = time.process_time()
    cfr_solver.evaluate_and_update_policy()
    CFR_t = time.process_time() - CFR_t

    EFR_iteration_data.append(EFR_t)
    cfr_iteration_data.append(CFR_t)
    if i % FL_print_freq == 0:
      conv = exploitability.exploitability(game, efr_solver.average_policy())
      print("EFR Iteration {} exploitability {}".format(i, conv))
      EFR_iteration_data.append(conv)

      cconv = exploitability.exploitability(game, cfr_solver.average_policy())
      print("CFR Iteration {} exploitability {}".format(i, cconv))
      cfr_iteration_data.append(cconv)
    cfr_data.append(cfr_iteration_data)
    efr_data.append(EFR_iteration_data)

  CFR_data = pd.DataFrame(cfr_data, columns=header)
  EFR_data = pd.DataFrame(efr_data, columns=header)

  CFR_data.to_csv('EFR_inital_action.csv', index=False)
  EFR_data.to_csv('CFR_baseline.csv', index=False)

main()