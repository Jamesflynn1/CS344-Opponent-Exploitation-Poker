import pandas as pd
import time
import sys


import EFR
from open_spiel.python.algorithms import exploitability
from open_spiel.python.algorithms import cfr
from Deviation_Types.Deviation_Sets import return_blind_CF
from open_spiel.python.algorithms.external_sampling_mccfr import ExternalSamplingSolver
import StoreTabularPolicy
import pyspiel

FL_game = 'leduc_poker'
FL_iterations = 1000
FL_players = 2

game = pyspiel.load_game(FL_game, {"players": FL_players})

mccfr_solution = ExternalSamplingSolver(game)

for i in range(FL_iterations):
    mccfr_solution.iteration()
    print("Iteration" + str(i))

StoreTabularPolicy.save_tabular_policy("Policy/MCCFR.csv", mccfr_solution.average_policy())

def add_infostate_policy():

def average_to_tabular_policy(game, avg_policy):
    avg_policy.action_probabilities(state)